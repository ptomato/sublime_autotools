<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>configure.ac</string>
		<string>configure.in</string>
		<string>m4</string>
		<string>at</string>
	</array>
	<key>name</key>
	<string>Autoconf M4</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#m4-quoted-shell</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#m4-pure</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-interpolation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-compound-command</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-pathname</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-loop</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-function-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#shell-redirection</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.shell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\)</string>
			<key>name</key>
			<string>invalid.illegal.syntax-error</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>ARG-M</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#m4-pure</string>
				</dict>
			</array>
		</dict>
		<key>ARG-S</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#m4-quoted-shell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m4-pure</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-AS-CASE</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-M</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#NO-ARGS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-M</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMMM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMMMM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMMM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMMMMM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMMMM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMMS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMMSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMSSM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MSSM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MMSSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MSSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-S</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MSM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MSSM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SSM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MSSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-MVARARGS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-S</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#NO-ARGS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-M</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SMMMSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-MMMSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-S</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SSM</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SM</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SSSS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SSS</string>
				</dict>
			</array>
		</dict>
		<key>ARGS-SVARARGS</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-S</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#TO-ARGS-SVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>NO-ARGS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>name</key>
			<string>invalid.illegal.supernumerary-argument.m4</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>TO-ARGS-M</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-M</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMMM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMMMM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMMM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMMSS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMSS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MMSS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMSS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MSS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MSSM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSSM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MSSS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSSS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-MVARARGS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-S</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-S</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-SM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-SS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-SSM</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SSM</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-SSS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SSS</string>
				</dict>
			</array>
		</dict>
		<key>TO-ARGS-SVARARGS</key>
		<dict>
			<key>begin</key>
			<string>,</string>
			<key>end</key>
			<string>(?=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>ac-macros-noargs</key>
		<dict>
			<key>match</key>
			<string>\bAC_(ARG_PROGRAM|AUTOCONF_VERSION|C_BACKSLASH_A|CACHE_(LOAD|SAVE)|CANONICAL_(BUILD|HOST|TARGET)|CHECK_HEADER_STDBOOL|C_(CHAR_UNSIGNED|CONST|FLEXIBLE_ARRAY_MEMBER|INLINE|PROTOTYPES|RESTRICT|STRINGIZE|TYPEOF|VARARRAYS|VOLATILE)|DISABLE_OPTION_CHECKING|ERLANG_SUBST_(((INSTALL_)?LIB|ROOT)_DIR|ERTS_VER)|F77_(MAIN|WRAPPERS)|FC_(MAIN|MODULE_EXTENSION|WRAPPERS)|FUNC_(ALLOCA|CHOWN|CLOSEDIR_VOID|FNMATCH(_GNU)?|FORK|FSEEKO|GETGROUPS|GETLOADAVG|GETMNTENT|GETPGRP|LSTAT|MALLOC|MBRTOWC|MEMCMP|MMAP|OBSTACK|REALLOC|SELECT_ARGTYPES|SETPGRP|STAT|STRCOLL|STRERROR_R|STRFTIME|STRNLEN|STRTOLD|UTIME_NULL|VPRINTF)|HEADER_(ASSERT|DIRENT|MAJOR|RESOLV|STAT|STDBOOL|STDC|SYS_WAIT|TIME|TIOCGWINSZ)|LANG_(DEFINES_PROVIDED|WERROR)|OUTPUT|PACKAGE_(BUGREPORT|NAME|STRING|TARNAME|URL|VERSION)|PATH_X(TRA)?|PRESERVE_HELP_ORDER|PROG_(AWK|CC(_C(89|99|_O))|CC_STDC|CPP(_WERROR)?|CXX(CPP|_C_O)?|EGREP|F77_C_O|FC_C_O|FGREP|GCC_TRADITIONAL|GREP|INSTALL|LEX|LN_S|MAKE_SET|MKDIR_P|OBJ(CXX)?CPP|RANLIB|SED|YACC)|REPLACE_FNMATCH|REQUIRE_CPP|STRUCT_(DIRENT_D_(INO|TYPE)|ST_BLOCKS|TIMEZONE|TM)|SYS_(INTERPRETER|LARGEFILE|LONG_FILE_NAMES|POSIX_TERMIOS)|TYPE_(GETGROUPS|INT(16_T|32_T|64_T|8_T)|INTMAX_T|INTPTR_T|LONG_DOUBLE(_WIDER)?|LONG_LONG_INT|MBSTATE_T|MODE_T|OFF_T|PID_T|SIGNAL|SIZE_T|SSIZE_T|UID_T|UINT(16_T|32_T|64_T|8_T)|UINTMAX_T|UINTPTR_T|UNSIGNED_LONG_LONG_INT)|USE_SYSTEM_EXTENSIONS)</string>
			<key>name</key>
			<string>keyword.other.macro.autoconf</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>ac-macros-noargs2</key>
		<dict>
			<key>match</key>
			<string>\bA(H_HEADER|S_(BOURNE_COMPATIBLE|INIT|LINENO_PREPARE|ME_PREPARE|MESSAGE_FD|MESSAGE_LOG_FD|ORIGINAL_STDIN_FD|SHELL_SANITIZE)|T_(CLEANUP|COLOR_TESTS))</string>
			<key>name</key>
			<string>keyword.other.macro.autoconf</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>ac-macros-obsolete</key>
		<dict>
			<key>match</key>
			<string>\bAC_(AIX|ALLOCA|ARG_ARRAY|CANONICAL_SYSTEM|C_(CROSS|LONG_DOUBLE)|CHAR_UNSIGNED|CHECKING|COMPILE_CHECK|CONFIG_HEADER|CONST|CROSS_CHECK|CYGWIN|DECL_(SYS_SIGLIST|YYTEXT)|DIR_HEADER|DISABLE_(FAST_INSTALL|SHARED|STATIC)|DYNIX_SEQ|ENABLE(_(SHARED|STATIC))?|EMXOS2|ERROR|EXEEXT|FIND_X(TRA)?|FOREACH|FUNC_(CHECK|ERROR_AT_LINE|LSTAT_FOLLOWS_SLASHED_SYMLINK|MKTIME|SETVBUF_REVERSED|STRTOD|WAIT3)|GCC_TRADITIONAL|GETGROUPS_T|GETLOADAVG|GNU_SOURCE|HAVE_(FUNCS|HEADERS|LIBRARY|POUNDBANG)|HEADER_(CHECK|EGREP)|HELP_STRING|INLINE|INT_16_BITS|IRIX_SUN|LANG_(CPLUSPLUS|C|FORTRAN77|RESTORE|SAVE)|LIBTOOL_(DLOPEN|WIN32_DLL)|LINK_FILES|LN_S|LONG_(64_BITS|DOUBLE|FILE_NAMES)|MAJOR_HEADER|MEMORY_H|MINGW32|MINIX|MINUS_C_MINUS_O|MMAP|MODE_T|OBJEXT|OBSOLETE|OFF_T|OUTPUT_COMMANDS|PID_T|PREFIX|PROG_(INTL|LIB)TOOL|PROGRAM_(CHECK|EGREP|PATH)|PROGRAMS_(CHECK|PATH)|REMOTE_TAPE|RESTARTABLE_SYSCALLS|RETSIGTYPE|RSH|SCO_INTL|SET_MAKE|SETVBUF_REVERSED|SIZEOF_TYPE|SIZE_T|STAT_MACROS_BROKEN|ST_(BLKSIZE|BLOCKS|RDEV)|STDC_HEADERS|STRCOLL|SYS_(RESTARTABLE_SYSCALLS|SIGLIST_DECLARED)|TEST_(CPP|PROGRAM)|TIME_WITH_SYS_TIME|TIMEZONE|TRY_(COMPILE|CPP|LINK_FUNC|LINK|RUN)|UID_T|UNISTD_H|USG|UTIME_NULL|VALIDATE_CACHED_SYSTEM_TUPLE|VERBOSE|VFORK|VPRINTF|WAIT3|WARN|WITH|WORDS_BIGENDIAN|XENIX_DIR|YYTEXT_POINTER)</string>
			<key>name</key>
			<string>invalid.deprecated.macro.autoconf</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>ac-macros-optargs</key>
		<dict>
			<key>match</key>
			<string>\bAC_(C_BIGENDIAN|ERLANG_(PATH|NEED)_ERLC?|F(77|C)_DUMMY_MAIN|FC_((FIXED|FREE)FORM|LINE_LENGTH)|INCLUDES_DEFAULT|LANG_POP|PROG_(CC|CXX|OBJC(XX)?|F(77|C)))</string>
			<key>name</key>
			<string>keyword.other.macro.autoconf</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>ac-macros-optargs2</key>
		<dict>
			<key>match</key>
			<string>\bA(S_EXIT|T_INIT)</string>
			<key>name</key>
			<string>keyword.other.macro.autoconf</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>am-macros-noargs</key>
		<dict>
			<key>match</key>
			<string>\bAM_(ENABLE_MULTILIB|GCONF_SOURCE_2|GLIB_GNU_GETTEXT|GNU_GETTEXT_INTL_SUBDIR|PATH_LISPDIR|PO_SUBDIRS|PROG_(AR|AS|GCJ|LEX)|SILENT_RULES|WITH_DMALLOC)</string>
			<key>name</key>
			<string>keyword.other.macro.automake</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>am-macros-obsolete</key>
		<dict>
			<key>match</key>
			<string>\bAM_(C_PROTOTYPES|CONFIG_HEADER|HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL|PATH_CHECK|PROG_(CC_(STDC|C_O)|LIBTOOL|MKDIR_P)|SYS_POSIX_TERMIOS|WITH_REGEX|(DIS|EN)ABLE_(STATIC|SHARED))</string>
			<key>name</key>
			<string>invalid.deprecated.macro.automake</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>am-macros-optargs</key>
		<dict>
			<key>match</key>
			<string>\bAM_(INIT_AUTOMAKE|MAINTAINER_MODE|PATH_PYTHON|PROG_(UPC|VALAC))</string>
			<key>name</key>
			<string>keyword.other.macro.automake</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>am-macros-private</key>
		<dict>
			<key>match</key>
			<string>\bAM_(DEP_TRACK|MAKE_INCLUDE|OUTPUT_DEPENDENCY_COMMANDS|PROG_INSTALL_STRIP|SANITY_CHECK|SET_DEPDIR)</string>
			<key>name</key>
			<string>invalid.illegal.private.automake</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>func-as-case</key>
		<dict>
			<key>begin</key>
			<string>\b(AS_CASE)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4sh</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-AS-CASE</string>
				</dict>
			</array>
		</dict>
		<key>func-m</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CHECK_(?:DECL|FUNC|HEADER)S_ONCE|CHECKING|CONFIG_(?:(?:(?:AUX|LIBOBJ)_|SRC)DIR|MACRO_DIRS?|SUBDIRS)|COPYRIGHT|ERLANG_NEED_ERLC?|F(?:77|C)_LIBRARY_LDFLAGS|FATAL|INCLUDES_DEFAULT|LANG(?:_(?:ASSERT|CONFTEST|FUNC_LINK_TRY|POP|PUSH|SOURCE))?|LIB(?:OBJS|SOURCES?)|MSG_(?:CHECKING|NOTICE|RESULT|WARN)|OPENMP|PREFIX_(?:DEFAULT|PROGRAM)|PREREQ|PROG_(?:CC|CXX|F77|OBJC(?:XX)?)|REPLACE_FUNCS|REQUIRE(?:_AUX_FILE)?|REVISION|SUBST_FILE|WARNING)|AH_(?:BOTTOM|TOP)|AS_(?:DIRNAME|(?:EXECUTABLE|MKDIR)_P|EXIT|SET_STATUS|TR_(?:CPP|SH)|VAR_(?:POPDEF|TEST_SET))|m4_(?:chomp(?:_all)?|cleardivert|debug(?:file|mode)|decr|defn|divert(?:_(?:pop|push))?|errprintn|(?:re_)?escape|exit|expand|flatten|s?include|incr|len|(?:make|mks)temp|n|newline|normalize|pattern_(?:allow|forbid)|popdef|set_(?:delete|list|listc|size)|sign|strip|to(?:lower|upper)|warning|wrap(?:_lifo)?)|AT_(?:BANNER|CAPTURE_FILE|COPYRIGHT|INIT|KEYWORDS|SETUP|TESTED)|AM_(?:GNU_GETTEXT_(?:VERSION|NEED)|EXTRA_RECURSIVE_TARGETS|ICONV|INIT_AUTOMAKE|MAINTAINER_MODE|PROG_UPC|SUBST_NOTMAKE|XGETTEXT_OPTION)|LT_(?:INIT|LANG|PREREQ)|IT_PO_SUBDIR|GOBJECT_INTROSPECTION_(?:CHECK|REQUIRE)|PKG_PREREQ|PKG_(?:NOARCH_)?INSTALLDIR)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-M</string>
				</dict>
			</array>
		</dict>
		<key>func-mm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:ARG_VAR|BEFORE|CHECK_ALIGNOF|CONFIG_TESTDIR|DIAGNOSE|ERLANG_(?:PATH_ERLC?|SUBST_INSTALL_LIB_SUBDIR)|F(?:77|C)_FUNC|LANG_(?:CALL|PROGRAM)|MSG_(?:ERROR|FAILURE)|PROG_FC)|AH_(?:TEMPLATE|VERBATIM)|AU_ALIAS|AS_(?:BOX|ESCAPE|TMPDIR|VAR_(?:APPEND|COPY|PUSHDEF))|m4_(?:append_uniq_w|apply|assert|change(?:com|quote)|(?:list)?cmp|(?:copy|rename)(?:_force)?|default(?:_nblank)?(?:_quoted)?|define(?:_default)?|defun|divert_(?:once|text)|fatal|index|map(?:all)?|pushdef|set_(?:contents|difference|dump|intersection|map|union)|split|stack_foreach(?:_lifo)?|text_box|version_compare|warn)|AT_DATA|AM_MISSING_PROG|GTK_DOC_CHECK|IT_PROG_INTLTOOL)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CHECK_SIZEOF|DEFINE(?:_UNQUOTED)?)|AS_SET_CATFILE|m4_(?:append|bpatsubst|bregexp|eval|ifn?blank|ifn?def|ifset|ifvaln?|map(?:all)?_sep|set_(?:empty|foreach)|substr|translit|version-prereq)|AM_GNU_GETTEXT)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmmm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CHECK_(?:PROGS|(?:TARGET_)?TOOLS?)|PATH_(?:PROGS?|(?:TARGET_)?TOOL))|AS_HELP_STRING|m4_(?:map_args_w|set_(?:add|contains|map_sep|remove)|stack_foreach_sep(?:_lifo)?|text|wrap))\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmmmm</key>
		<dict>
			<key>begin</key>
			<string>\b(m4_(?:append_uniq|for)|AC_INIT)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMMM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmmmmm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_CHECK_PROG)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMMMM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmms</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_COMPUTE_INT)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMS</string>
				</dict>
			</array>
		</dict>
		<key>func-mmmss</key>
		<dict>
			<key>begin</key>
			<string>\b(AT_CHECK_EUNIT|PKG_CHECK_VAR)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMMSS</string>
				</dict>
			</array>
		</dict>
		<key>func-mms</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_CACHE_CHECK|m4_foreach(?:_w)?)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMS</string>
				</dict>
			</array>
		</dict>
		<key>func-mmss</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:ARG_(?:ENABLE|WITH)|EGREP_(?:CPP|HEADER))|AS_VAR_IF|AT_ARG_OPTION(?:_ARG)?|PKG_CHECK_MODULES(?:_STATIC)?)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMSS</string>
				</dict>
			</array>
		</dict>
		<key>func-mmssm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CHECK_LIB|SEARCH_LIBS|PATH_PROGS_FEATURE_CHECK))\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMSSM</string>
				</dict>
			</array>
		</dict>
		<key>func-mmsss</key>
		<dict>
			<key>begin</key>
			<string>\b(AS_VERSION_COMPARE)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MMSSS</string>
				</dict>
			</array>
		</dict>
		<key>func-ms</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CACHE_VAL|DEFUN(?:_ONCE)?|SUBST)|AS_(?:INIT_GENERATED|VAR_(?:ARITH|SET))|AM_CONDITIONAL)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MS</string>
				</dict>
			</array>
		</dict>
		<key>func-msm</key>
		<dict>
			<key>begin</key>
			<string>\b(AU_DEFUN)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSM</string>
				</dict>
			</array>
		</dict>
		<key>func-mss</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:CHECK_(?:FILE|FUNC)(?:S)?|(?:COMPILE|LINK|PREPROC)_IFELSE|CONFIG_(?:COMMANDS|FILES|HEADERS|LINKS)|ERLANG_CHECK_LIB|FC_(?:LINE_LENGTH|(?:PP_)?SRCEXT))|AS_VAR_SET_IF|AM_(?:COND_IF|PATH_PYTHON|PROG_VALAC)|PKG_CHECK_EXISTS)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSS</string>
				</dict>
			</array>
		</dict>
		<key>func-mssm</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_CHECK_(?:DECL|HEADER|MEMBER|TYPE)(?:S)?)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSSM</string>
				</dict>
			</array>
		</dict>
		<key>func-msss</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_RUN_IFELSE)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MSSS</string>
				</dict>
			</array>
		</dict>
		<key>func-mvarargs</key>
		<dict>
			<key>begin</key>
			<string>\b(m4_(?:argn|bmatch|bpatsubsts|car|case|cdr|builtin|combine|cond|count|curry|do|dquote(?:_elt)?|dumpdefs?|echo|errprint|format|if|ignore|indir|join(?:all)?|makelist|map_args(?:_(?:pair|sep))?|max|min|(?:un)?quote|reverse|set_add_all|shift(?:2|3|n)?|trace(?:off|on)|undefine|undivert))\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-MVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>func-s</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_CONFIG_COMMANDS_(?:PRE|POST)|AS_(?:ECHO(?:_N)?|UNSET)|m4_(?:esyscmd(?:_s)?|syscmd)|AT_(?:X?FAIL|SKIP)_IF)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-S</string>
				</dict>
			</array>
		</dict>
		<key>func-smmmss</key>
		<dict>
			<key>begin</key>
			<string>\b(AT_CHECK(?:_UNQUOTED)?)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SMMMSS</string>
				</dict>
			</array>
		</dict>
		<key>func-ss</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_(?:F(?:77|C)_(?:DUMMY_MAIN|IMPLICIT_NONE)|FC_(?:CHECK_BOUNDS|(?:FREE|FIXED)FORM|MODULE_(?:OUTPUT_)?FLAG|PP_DEFINE)))\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SS</string>
				</dict>
			</array>
		</dict>
		<key>func-ssss</key>
		<dict>
			<key>begin</key>
			<string>\b(AC_C_BIGENDIAN|AS_LITERAL_(?:WORD_)?IF)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SSSS</string>
				</dict>
			</array>
		</dict>
		<key>func-svarargs</key>
		<dict>
			<key>begin</key>
			<string>\b(AS_IF)\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.macro.m4</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function-call.m4</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARGS-SVARARGS</string>
				</dict>
			</array>
		</dict>
		<key>m4-comment</key>
		<dict>
			<key>begin</key>
			<string>dnl</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.dnl.m4</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>m4-function-call</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[\w\d_])\((?!\))</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#ARG-M</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>,</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#ARG-M</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>m4-macros-noargs</key>
		<dict>
			<key>match</key>
			<string>\bm4_(divnum|init|location|sysval)</string>
			<key>name</key>
			<string>keyword.other.macro.m4</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>m4-macros-optargs</key>
		<dict>
			<key>match</key>
			<string>\bm4_(change(com|quote)|debug(file|mode)|divert_pop|newline|trace(on|off))</string>
			<key>name</key>
			<string>keyword.other.macro.m4</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>m4-pure</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#m4-comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#quadrigraph</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-m</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-s</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-ms</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-ss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mms</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-msm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmmm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmms</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mssm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-msss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-ssss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmmmm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmmss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmssm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmsss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mmmmmm</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-smmmss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-mvarargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-svarargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#func-as-case</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m4-macros-noargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m4-macros-optargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ac-macros-noargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ac-macros-noargs2</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ac-macros-optargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ac-macros-optargs2</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ac-macros-obsolete</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#am-macros-noargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#am-macros-optargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#am-macros-obsolete</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#am-macros-private</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#misc-macros-noargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#misc-macros-optargs</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m4-function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#m4-quoted</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\]</string>
					<key>name</key>
					<string>invalid.illegal.syntax-error</string>
				</dict>
			</array>
		</dict>
		<key>m4-quoted</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#m4-pure</string>
				</dict>
			</array>
		</dict>
		<key>m4-quoted-shell</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>end</key>
			<string>\]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>misc-macros-noargs</key>
		<dict>
			<key>match</key>
			<string>\b(__(file|o?line)__|LT_(CMD_MAX_LEN|FUNC_DLSYM_USCORE|LIB_(M|DLLOAD)|OUTPUT|PATH_(LD|NM)|SYS_(DLOPEN_(SELF|DEPLIBS)|MODULE_(EXT|PATH)|DLSEARCH_PATH|SYMBOL_USCORE)))</string>
			<key>name</key>
			<string>keyword.other.macro.autotools</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>misc-macros-optargs</key>
		<dict>
			<key>match</key>
			<string>\b(LT_INIT|PKG_PROG_PKG_CONFIG)</string>
			<key>name</key>
			<string>keyword.other.macro.autotools</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>quadrigraph</key>
		<dict>
			<key>match</key>
			<string>@(&lt;:|:&gt;)@</string>
			<key>name</key>
			<string>constant.character.escape.quadrigraph.m4</string>
			<key>patterns</key>
			<array/>
		</dict>
		<key>shell-case-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=\S)</string>
					<key>end</key>
					<string>;;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.terminator.case-clause.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.scope.case-clause.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\(|(?=\S))</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.case-pattern.shell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>name</key>
							<string>meta.scope.case-pattern.shell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\|</string>
									<key>name</key>
									<string>punctuation.separator.pipe-sign.shell</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#shell-string</string>
								</dict>
								<dict>
									<key>include</key>
									<string>source.shell.string</string>
								</dict>
								<dict>
									<key>include</key>
									<string>source.shell.variable</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#shell-interpolation</string>
								</dict>
								<dict>
									<key>include</key>
									<string>source.shell.interpolation</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#shell-pathname</string>
								</dict>
								<dict>
									<key>include</key>
									<string>source.shell.pathname</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\))</string>
							<key>end</key>
							<string>(?=;;)</string>
							<key>name</key>
							<string>meta.scope.case-clause-body.shell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-compound-command</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\[{2})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.logical-expression.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\]{2})</string>
					<key>name</key>
					<string>meta.scope.logical-expression.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.shell.logical-expression</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.subshell.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.scope.subshell.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\s|^)(\{)(?=\s|$)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=^|;)\s*(\})</string>
					<key>name</key>
					<string>meta.scope.group.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-function-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(function)\s+([^\s\\]+)(?:\s*(\(\)))?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.shell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.shell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;|&amp;|$</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b([^\s\\=]+)\s*(\(\))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.shell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;|&amp;|$</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-interpolation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.interpolated.backtick.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[`\\$]</string>
							<key>name</key>
							<string>constant.character.escape.shell</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\$\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.interpolated.dollar.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-loop</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(for)\s+(?=\({2})</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>name</key>
					<string>meta.scope.for-loop.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(for)\s+((?:[^\s\\]|\\.)+)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.loop.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.scope.for-in-loop.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(while|until)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>name</key>
					<string>meta.scope.while-loop.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(select)\s+((?:[^\s\\]|\\.)+)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.loop.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(done)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.scope.select-block.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(case)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(esac)\b</string>
					<key>name</key>
					<string>meta.scope.case-block.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\b(?:in)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.control.shell</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\b(?:esac)\b)</string>
							<key>name</key>
							<string>meta.scope.case-body.shell</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.shell.comment</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#shell-case-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>source.shell.case-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(if)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(fi)\b</string>
					<key>name</key>
					<string>meta.scope.if-block.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-pathname</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([?*+@!])(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.extglob.shell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.extglob.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.extglob.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.structure.extglob.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-redirection</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>[&gt;&lt;]\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.interpolated.process-substitution.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>shell-string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\$?"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.shell</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.shell</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.shell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[\$`"\\\n]</string>
							<key>name</key>
							<string>constant.character.escape.shell</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell.variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#shell-interpolation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.shell.interpolation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.m4</string>
	<key>uuid</key>
	<string>cd50bfc0-2ccb-47b9-a157-98b00816d909</string>
</dict>
</plist>
